{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","joke","setJoke","className","id","onClick","Axios","get","then","val","console","log","data","setup","punchline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA2CeA,MAvCf,WACE,MAAsBC,qBAAtB,mBAAKC,EAAL,KAAWC,EAAX,KAYA,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKC,GAAG,OAAR,SACE,uDAEF,qBAAKA,GAAG,OAAR,SACE,wBAAQD,UAAU,MAAME,QAjBb,WACfC,IAAMC,IAAI,sDAAsDC,MAC9D,SAACC,GACCC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAIG,KAAKC,OACrBH,QAAQC,IAAIF,EAAIG,KAAKE,WACrBZ,EAASD,EAAOQ,EAAIG,KAAKC,MAAQ,QAAUJ,EAAIG,KAAKE,eAWpD,yBAIF,qBAAKV,GAAG,OAAR,SACE,wBAAQD,UAAU,MAAME,QAZhB,kBAAMH,EAASD,EAAO,KAY9B,qBAIF,4BAAIA,IACJ,mBAAGG,GAAG,QAAN,0EAGA,mBAAGA,GAAG,QAAN,gFCxBSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.33d1c3b4.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport Axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  let [joke, setJoke] = useState();\r\n  const makejoke = () => {\r\n    Axios.get(\"https://official-joke-api.appspot.com/jokes/random\").then(\r\n      (val) => {\r\n        console.log(val);\r\n        console.log(val.data.setup);\r\n        console.log(val.data.punchline);\r\n        setJoke((joke = val.data.setup + \" ... \" + val.data.punchline));\r\n      }\r\n    );\r\n  };\r\n  const reset = () => setJoke((joke = \"\"));\r\n  return (\r\n    <div className=\"App\">\r\n      <div id=\"text\">\r\n        <strong>{/*Tittle*/}Joke generator!</strong>\r\n      </div>\r\n      <div id=\"btn4\">\r\n        <button className=\"btn\" onClick={makejoke}>\r\n          MAKE JOKE\r\n        </button>\r\n      </div>\r\n      <div id=\"btn4\">\r\n        <button className=\"btn\" onClick={reset}>\r\n          RESET\r\n        </button>\r\n      </div>\r\n      <p>{joke}</p>\r\n      <p id=\"texts\">\r\n        Thanks to everyone who respond to my morning jokes everyday!\r\n      </p>\r\n      <p id=\"text1\">\r\n        for website improvements and bugs please report to Alvin cheng\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}